__PREMIER RAFFINAGE

while true:
    #wait for connexion
    connexion = listenForConnexion()
    
    #authentify the user
    do:
        request = listenForRequest(connexion)
        response = auth(connexion, request)
        send_response(connexion, response)
    while #connexion isn't authentified
    
    #process the user's requests
    while #connexion isn't finished:
        request = listenForRequest(connexion)
        response = process(connexion, request)
        send_response(connexion, response)
    
    disconnect(connexion)

while true:
    #user chooses an action
    action = getAction()

    #request is built
    request = buildRequest(action)

    #and sent to the server
    send_request(request)

    #then the client displays success or failure
    error_code = listenForRequest()
    display(error_code)


__SECOND RAFFINAGE

function auth(connexion, request):
    #check if type is AUTH or QUIT
    #if QUIT then stop there
    #else:
        #check hash and user from request
        #if correct :
            #designate the connexion has authentified
        #else:
            #return auth error



function add():
    #case user:
        #check if connexion is admin
        #check if user exists
        #add new user and directory file path to the users file
        #create new directory file
    
    #case contact:
        #open user's directory file
        #check if contact doesn't already exists
        #add contact to file
function delete():
    #case user:
        #check if user exists
        #delete user from file
        #delete linked directory

    #case contact:
        #open user's directory
        #check if contact exists
        #delete contact from the directory



function edit():
    #check if contact exists in user's directory
    #edit the contact's properties



function get():
    #case directory:
        #check if directory/user exists
        #check if user has permission
        #open the directory
        #send content to client

    #case contact:
        #check if directory exists
        #check if contact exists
        #check if user has permission
        #open the directory
        #send contact's content to client

    #case allowed directories:
        #send list of directories to client



function allow():
    #check if users exist
    #for each user:
        #add permission to user



function search():
    #check if contact exists in
    #send contact info to client



function quit():
    #stop the connexion



function process(request):
    #case ADD:
        add(request)
    #case DELETE:
        delete(request)
    #case EDIT:
        edit(request)
    #case GET:
        get(request)
    #case ALLOW:
        allow(request)
    #case SEARCH:
        search(request)
    #case QUIT:
        quit()
